version: '3.8'

services:
  django:
    image: ${APP_SERVICE_IMAGE}
    build: ./app
    container_name: ${COMPOSE_PROJECT_NAME}-django
    ports:
      - ${APP_PORTS}
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - appnet

  postgres:
    image: ${DB_SERVICE_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 3s
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_SERVICE_IMAGE_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-pgadmin
    ports:
      - ${PGADMIN_LOCAL_PORT}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      - appnet

networks:
  appnet:

volumes:
  pgdata:
  pgadmindata: